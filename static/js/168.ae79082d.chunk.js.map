{"version":3,"file":"static/js/168.ae79082d.chunk.js","mappings":"sPACA,EAAuB,sBAAvB,EAAoD,sBAApD,EAAmF,wB,SCgDnF,EA3CgB,WACd,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,sGAEZJ,GAAW,GAFC,UAGcK,EAAAA,EAAAA,IAAgBJ,GAH9B,gBAGJK,EAHI,EAGJA,QACRR,EAAQQ,GACRN,GAAW,GALC,kDAOZO,QAAQC,IAAR,MAPY,yBASZR,GAAW,GATC,6EAAH,qDAYbI,GACD,GAAE,CAACH,KAEF,8BACGF,EACC,aACEF,GAAQA,EAAKY,OAAS,GACxB,0BACE,eAAIC,UAAWC,EAAf,SACGd,EAAKe,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACR,gBAAaL,UAAWC,EAAxB,WACE,cAAGD,UAAWC,EAAd,SAA2BE,IAC1BC,GAAWA,IAFLC,EADD,SASd,6CAIP,C,sLC7CKC,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wHAGoBP,EAASQ,IAH7B,uBAGwC,CACzCL,OAAQ,CACNI,KAAAA,KALD,uBAGK1B,EAHL,EAGKA,KAHL,kBASIA,GATJ,2HAeA,SAAe4B,EAAtB,+CAAO,OAAP,oBAAO,WAA+BV,GAA/B,kFACCW,EADD,iBACmBX,GADnB,kBAGoBC,EAASQ,IAAIE,GAHjC,uBAGK7B,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAe8B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BZ,GAA5B,kFACCW,EADD,iBACmBX,EADnB,8BAGoBC,EAASQ,IAAIE,GAHjC,uBAGK7B,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BU,GAA/B,kFACCW,EADD,iBACmBX,EADnB,8BAGoBC,EAASQ,IAAIE,GAHjC,uBAGK7B,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAe+B,EAAtB,iDAAO,OAAP,oBAAO,WAA2BC,EAAaN,GAAxC,gFACCG,EADD,8BACgCG,GADhC,kBAGgBb,EAASQ,IAAIE,EAAO,CACrCP,OAAQ,CACNI,KAAAA,KALD,cAGG1B,EAHH,yBAQIA,GARJ,2H","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","shared/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"item\":\"Reviews_item__DJKij\",\"author\":\"Reviews_author__CqYAZ\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'shared/Api';\n\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getMovieReviews(movieId);\n        setData(results);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [movieId]);\n  return (\n    <>\n      {loading ? (\n        'Loading...'\n      ) : data && data.length > 0 ? (\n        <div>\n          <ul className={css.list}>\n            {data.map(({ author, content, id }) => (\n              <li key={id} className={css.item}>\n                <p className={css.author}>{author}</p>\n                {content && content}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>No reviews found</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'ea96f6fb5fc9e33f95fe833ab22b1c37',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies(page) {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString, page) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const data = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["useState","data","setData","loading","setLoading","movieId","useParams","useEffect","getData","getMovieReviews","results","console","log","length","className","css","map","author","content","id","instance","axios","baseURL","params","api_key","language","getTrendingMovies","page","get","getMovieDetails","query","getMovieCast","searchMovie","queryString"],"sourceRoot":""}